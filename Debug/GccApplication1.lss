
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004f0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  000004f0  00000564  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000578  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005a8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000c0  00000000  00000000  000005e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000101f  00000000  00000000  000006a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000076c  00000000  00000000  000016c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000705  00000000  00000000  00001e2f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000170  00000000  00000000  00002534  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000041e  00000000  00000000  000026a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007fa  00000000  00000000  00002ac2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  000032bc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ef       	ldi	r30, 0xF0	; 240
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 37       	cpi	r26, 0x74	; 116
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 35 02 	call	0x46a	; 0x46a <main>
  7a:	0c 94 76 02 	jmp	0x4ec	; 0x4ec <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <Dio_SetPinDir>:
case dio_portC :
PORTC = val;
break;

case dio_portD :
PORTD = val;
  82:	44 23       	and	r20, r20
  84:	b9 f1       	breq	.+110    	; 0xf4 <Dio_SetPinDir+0x72>
  86:	41 30       	cpi	r20, 0x01	; 1
  88:	09 f0       	breq	.+2      	; 0x8c <Dio_SetPinDir+0xa>
  8a:	6b c0       	rjmp	.+214    	; 0x162 <Dio_SetPinDir+0xe0>
  8c:	81 30       	cpi	r24, 0x01	; 1
  8e:	89 f0       	breq	.+34     	; 0xb2 <Dio_SetPinDir+0x30>
  90:	28 f0       	brcs	.+10     	; 0x9c <Dio_SetPinDir+0x1a>
  92:	82 30       	cpi	r24, 0x02	; 2
  94:	c9 f0       	breq	.+50     	; 0xc8 <Dio_SetPinDir+0x46>
  96:	83 30       	cpi	r24, 0x03	; 3
  98:	11 f1       	breq	.+68     	; 0xde <Dio_SetPinDir+0x5c>
  9a:	08 95       	ret
  9c:	2a b3       	in	r18, 0x1a	; 26
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <Dio_SetPinDir+0x26>
  a4:	88 0f       	add	r24, r24
  a6:	99 1f       	adc	r25, r25
  a8:	6a 95       	dec	r22
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <Dio_SetPinDir+0x22>
  ac:	82 2b       	or	r24, r18
  ae:	8a bb       	out	0x1a, r24	; 26
  b0:	08 95       	ret
  b2:	27 b3       	in	r18, 0x17	; 23
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <Dio_SetPinDir+0x3c>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	6a 95       	dec	r22
  c0:	e2 f7       	brpl	.-8      	; 0xba <Dio_SetPinDir+0x38>
  c2:	82 2b       	or	r24, r18
  c4:	87 bb       	out	0x17, r24	; 23
  c6:	08 95       	ret
  c8:	24 b3       	in	r18, 0x14	; 20
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <Dio_SetPinDir+0x52>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <Dio_SetPinDir+0x4e>
  d8:	82 2b       	or	r24, r18
  da:	84 bb       	out	0x14, r24	; 20
  dc:	08 95       	ret
  de:	21 b3       	in	r18, 0x11	; 17
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <Dio_SetPinDir+0x68>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	6a 95       	dec	r22
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <Dio_SetPinDir+0x64>
  ee:	82 2b       	or	r24, r18
  f0:	81 bb       	out	0x11, r24	; 17
  f2:	08 95       	ret
  f4:	81 30       	cpi	r24, 0x01	; 1
  f6:	91 f0       	breq	.+36     	; 0x11c <Dio_SetPinDir+0x9a>
  f8:	28 f0       	brcs	.+10     	; 0x104 <Dio_SetPinDir+0x82>
  fa:	82 30       	cpi	r24, 0x02	; 2
  fc:	d9 f0       	breq	.+54     	; 0x134 <Dio_SetPinDir+0xb2>
  fe:	83 30       	cpi	r24, 0x03	; 3
 100:	29 f1       	breq	.+74     	; 0x14c <Dio_SetPinDir+0xca>
 102:	08 95       	ret
 104:	2a b3       	in	r18, 0x1a	; 26
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	02 c0       	rjmp	.+4      	; 0x110 <Dio_SetPinDir+0x8e>
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	6a 95       	dec	r22
 112:	e2 f7       	brpl	.-8      	; 0x10c <Dio_SetPinDir+0x8a>
 114:	80 95       	com	r24
 116:	82 23       	and	r24, r18
 118:	8a bb       	out	0x1a, r24	; 26
 11a:	08 95       	ret
 11c:	27 b3       	in	r18, 0x17	; 23
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	02 c0       	rjmp	.+4      	; 0x128 <Dio_SetPinDir+0xa6>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	6a 95       	dec	r22
 12a:	e2 f7       	brpl	.-8      	; 0x124 <Dio_SetPinDir+0xa2>
 12c:	80 95       	com	r24
 12e:	82 23       	and	r24, r18
 130:	87 bb       	out	0x17, r24	; 23
 132:	08 95       	ret
 134:	24 b3       	in	r18, 0x14	; 20
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <Dio_SetPinDir+0xbe>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <Dio_SetPinDir+0xba>
 144:	80 95       	com	r24
 146:	82 23       	and	r24, r18
 148:	84 bb       	out	0x14, r24	; 20
 14a:	08 95       	ret
 14c:	21 b3       	in	r18, 0x11	; 17
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	02 c0       	rjmp	.+4      	; 0x158 <Dio_SetPinDir+0xd6>
 154:	88 0f       	add	r24, r24
 156:	99 1f       	adc	r25, r25
 158:	6a 95       	dec	r22
 15a:	e2 f7       	brpl	.-8      	; 0x154 <Dio_SetPinDir+0xd2>
 15c:	80 95       	com	r24
 15e:	82 23       	and	r24, r18
 160:	81 bb       	out	0x11, r24	; 17
 162:	08 95       	ret

00000164 <Dio_WritePin>:
default:
break;
}
}
void Dio_WritePin (uint8 port,uint8 pin,uint8 val){
switch (val){
 164:	44 23       	and	r20, r20
 166:	b9 f1       	breq	.+110    	; 0x1d6 <Dio_WritePin+0x72>
 168:	41 30       	cpi	r20, 0x01	; 1
 16a:	09 f0       	breq	.+2      	; 0x16e <Dio_WritePin+0xa>
 16c:	6b c0       	rjmp	.+214    	; 0x244 <Dio_WritePin+0xe0>

	case dio_pin_high:          // output dir

	switch (port){
 16e:	81 30       	cpi	r24, 0x01	; 1
 170:	89 f0       	breq	.+34     	; 0x194 <Dio_WritePin+0x30>
 172:	28 f0       	brcs	.+10     	; 0x17e <Dio_WritePin+0x1a>
 174:	82 30       	cpi	r24, 0x02	; 2
 176:	c9 f0       	breq	.+50     	; 0x1aa <Dio_WritePin+0x46>
 178:	83 30       	cpi	r24, 0x03	; 3
 17a:	11 f1       	breq	.+68     	; 0x1c0 <Dio_WritePin+0x5c>
 17c:	08 95       	ret
		case dio_portA:
		SET_BIT(PORTA,pin);
 17e:	2b b3       	in	r18, 0x1b	; 27
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <Dio_WritePin+0x26>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <Dio_WritePin+0x22>
 18e:	82 2b       	or	r24, r18
 190:	8b bb       	out	0x1b, r24	; 27
		break;
 192:	08 95       	ret
		case dio_portB:
		SET_BIT(PORTB,pin);
 194:	28 b3       	in	r18, 0x18	; 24
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <Dio_WritePin+0x3c>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <Dio_WritePin+0x38>
 1a4:	82 2b       	or	r24, r18
 1a6:	88 bb       	out	0x18, r24	; 24
		break;
 1a8:	08 95       	ret
		case dio_portC:
		SET_BIT(PORTC,pin);
 1aa:	25 b3       	in	r18, 0x15	; 21
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <Dio_WritePin+0x52>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <Dio_WritePin+0x4e>
 1ba:	82 2b       	or	r24, r18
 1bc:	85 bb       	out	0x15, r24	; 21
		break;
 1be:	08 95       	ret
		case dio_portD:
		SET_BIT(PORTD,pin);
 1c0:	22 b3       	in	r18, 0x12	; 18
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <Dio_WritePin+0x68>
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	6a 95       	dec	r22
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <Dio_WritePin+0x64>
 1d0:	82 2b       	or	r24, r18
 1d2:	82 bb       	out	0x12, r24	; 18
		break;
 1d4:	08 95       	ret
	}
	break;

	case dio_pin_low:                  //input dir
	switch (port){
 1d6:	81 30       	cpi	r24, 0x01	; 1
 1d8:	91 f0       	breq	.+36     	; 0x1fe <Dio_WritePin+0x9a>
 1da:	28 f0       	brcs	.+10     	; 0x1e6 <Dio_WritePin+0x82>
 1dc:	82 30       	cpi	r24, 0x02	; 2
 1de:	d9 f0       	breq	.+54     	; 0x216 <Dio_WritePin+0xb2>
 1e0:	83 30       	cpi	r24, 0x03	; 3
 1e2:	29 f1       	breq	.+74     	; 0x22e <Dio_WritePin+0xca>
 1e4:	08 95       	ret
		case dio_portA:
		CLR_BIT(PORTA,pin);
 1e6:	2b b3       	in	r18, 0x1b	; 27
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <Dio_WritePin+0x8e>
 1ee:	88 0f       	add	r24, r24
 1f0:	99 1f       	adc	r25, r25
 1f2:	6a 95       	dec	r22
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <Dio_WritePin+0x8a>
 1f6:	80 95       	com	r24
 1f8:	82 23       	and	r24, r18
 1fa:	8b bb       	out	0x1b, r24	; 27
		break;
 1fc:	08 95       	ret
		case dio_portB:
		CLR_BIT(PORTB,pin);
 1fe:	28 b3       	in	r18, 0x18	; 24
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 c0       	rjmp	.+4      	; 0x20a <Dio_WritePin+0xa6>
 206:	88 0f       	add	r24, r24
 208:	99 1f       	adc	r25, r25
 20a:	6a 95       	dec	r22
 20c:	e2 f7       	brpl	.-8      	; 0x206 <Dio_WritePin+0xa2>
 20e:	80 95       	com	r24
 210:	82 23       	and	r24, r18
 212:	88 bb       	out	0x18, r24	; 24
		break;
 214:	08 95       	ret
		case dio_portC:
		CLR_BIT(PORTC,pin);
 216:	25 b3       	in	r18, 0x15	; 21
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 c0       	rjmp	.+4      	; 0x222 <Dio_WritePin+0xbe>
 21e:	88 0f       	add	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	6a 95       	dec	r22
 224:	e2 f7       	brpl	.-8      	; 0x21e <Dio_WritePin+0xba>
 226:	80 95       	com	r24
 228:	82 23       	and	r24, r18
 22a:	85 bb       	out	0x15, r24	; 21
		break;
 22c:	08 95       	ret
		case dio_portD:
		CLR_BIT(PORTD,pin);
 22e:	22 b3       	in	r18, 0x12	; 18
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	02 c0       	rjmp	.+4      	; 0x23a <Dio_WritePin+0xd6>
 236:	88 0f       	add	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	6a 95       	dec	r22
 23c:	e2 f7       	brpl	.-8      	; 0x236 <Dio_WritePin+0xd2>
 23e:	80 95       	com	r24
 240:	82 23       	and	r24, r18
 242:	82 bb       	out	0x12, r24	; 18
 244:	08 95       	ret

00000246 <LCD_WriteCommd>:
		
		LCD_WriteCommd(pos[row]+col);
}
void LCD_Clear              (void)
{
	    LCD_WriteCommd(0x01);
 246:	cf 93       	push	r28
 248:	c8 2f       	mov	r28, r24
 24a:	40 e0       	ldi	r20, 0x00	; 0
 24c:	62 e0       	ldi	r22, 0x02	; 2
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	0e 94 b2 00 	call	0x164	; 0x164 <Dio_WritePin>
 254:	40 e0       	ldi	r20, 0x00	; 0
 256:	61 e0       	ldi	r22, 0x01	; 1
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	0e 94 b2 00 	call	0x164	; 0x164 <Dio_WritePin>
 25e:	40 e0       	ldi	r20, 0x00	; 0
 260:	63 e0       	ldi	r22, 0x03	; 3
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	0e 94 b2 00 	call	0x164	; 0x164 <Dio_WritePin>
 268:	8c 2f       	mov	r24, r28
 26a:	80 7f       	andi	r24, 0xF0	; 240
 26c:	8b bb       	out	0x1b, r24	; 27
 26e:	41 e0       	ldi	r20, 0x01	; 1
 270:	63 e0       	ldi	r22, 0x03	; 3
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	0e 94 b2 00 	call	0x164	; 0x164 <Dio_WritePin>
 278:	87 e8       	ldi	r24, 0x87	; 135
 27a:	93 e1       	ldi	r25, 0x13	; 19
 27c:	01 97       	sbiw	r24, 0x01	; 1
 27e:	f1 f7       	brne	.-4      	; 0x27c <LCD_WriteCommd+0x36>
 280:	00 c0       	rjmp	.+0      	; 0x282 <LCD_WriteCommd+0x3c>
 282:	00 00       	nop
 284:	40 e0       	ldi	r20, 0x00	; 0
 286:	63 e0       	ldi	r22, 0x03	; 3
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	0e 94 b2 00 	call	0x164	; 0x164 <Dio_WritePin>
 28e:	83 ec       	ldi	r24, 0xC3	; 195
 290:	99 e0       	ldi	r25, 0x09	; 9
 292:	01 97       	sbiw	r24, 0x01	; 1
 294:	f1 f7       	brne	.-4      	; 0x292 <LCD_WriteCommd+0x4c>
 296:	00 c0       	rjmp	.+0      	; 0x298 <LCD_WriteCommd+0x52>
 298:	00 00       	nop
 29a:	c2 95       	swap	r28
 29c:	c0 7f       	andi	r28, 0xF0	; 240
 29e:	cb bb       	out	0x1b, r28	; 27
 2a0:	41 e0       	ldi	r20, 0x01	; 1
 2a2:	63 e0       	ldi	r22, 0x03	; 3
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	0e 94 b2 00 	call	0x164	; 0x164 <Dio_WritePin>
 2aa:	87 e8       	ldi	r24, 0x87	; 135
 2ac:	93 e1       	ldi	r25, 0x13	; 19
 2ae:	01 97       	sbiw	r24, 0x01	; 1
 2b0:	f1 f7       	brne	.-4      	; 0x2ae <LCD_WriteCommd+0x68>
 2b2:	00 c0       	rjmp	.+0      	; 0x2b4 <LCD_WriteCommd+0x6e>
 2b4:	00 00       	nop
 2b6:	40 e0       	ldi	r20, 0x00	; 0
 2b8:	63 e0       	ldi	r22, 0x03	; 3
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	0e 94 b2 00 	call	0x164	; 0x164 <Dio_WritePin>
 2c0:	83 ec       	ldi	r24, 0xC3	; 195
 2c2:	99 e0       	ldi	r25, 0x09	; 9
 2c4:	01 97       	sbiw	r24, 0x01	; 1
 2c6:	f1 f7       	brne	.-4      	; 0x2c4 <LCD_WriteCommd+0x7e>
 2c8:	00 c0       	rjmp	.+0      	; 0x2ca <LCD_WriteCommd+0x84>
 2ca:	00 00       	nop
 2cc:	cf 91       	pop	r28
 2ce:	08 95       	ret

000002d0 <LCD_Init>:
 2d0:	41 e0       	ldi	r20, 0x01	; 1
 2d2:	61 e0       	ldi	r22, 0x01	; 1
 2d4:	81 e0       	ldi	r24, 0x01	; 1
 2d6:	0e 94 41 00 	call	0x82	; 0x82 <Dio_SetPinDir>
 2da:	41 e0       	ldi	r20, 0x01	; 1
 2dc:	62 e0       	ldi	r22, 0x02	; 2
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	0e 94 41 00 	call	0x82	; 0x82 <Dio_SetPinDir>
 2e4:	41 e0       	ldi	r20, 0x01	; 1
 2e6:	63 e0       	ldi	r22, 0x03	; 3
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	0e 94 41 00 	call	0x82	; 0x82 <Dio_SetPinDir>
 2ee:	41 e0       	ldi	r20, 0x01	; 1
 2f0:	64 e0       	ldi	r22, 0x04	; 4
 2f2:	80 e0       	ldi	r24, 0x00	; 0
 2f4:	0e 94 41 00 	call	0x82	; 0x82 <Dio_SetPinDir>
 2f8:	41 e0       	ldi	r20, 0x01	; 1
 2fa:	65 e0       	ldi	r22, 0x05	; 5
 2fc:	80 e0       	ldi	r24, 0x00	; 0
 2fe:	0e 94 41 00 	call	0x82	; 0x82 <Dio_SetPinDir>
 302:	41 e0       	ldi	r20, 0x01	; 1
 304:	66 e0       	ldi	r22, 0x06	; 6
 306:	80 e0       	ldi	r24, 0x00	; 0
 308:	0e 94 41 00 	call	0x82	; 0x82 <Dio_SetPinDir>
 30c:	41 e0       	ldi	r20, 0x01	; 1
 30e:	67 e0       	ldi	r22, 0x07	; 7
 310:	80 e0       	ldi	r24, 0x00	; 0
 312:	0e 94 41 00 	call	0x82	; 0x82 <Dio_SetPinDir>
 316:	8f e4       	ldi	r24, 0x4F	; 79
 318:	93 ec       	ldi	r25, 0xC3	; 195
 31a:	01 97       	sbiw	r24, 0x01	; 1
 31c:	f1 f7       	brne	.-4      	; 0x31a <LCD_Init+0x4a>
 31e:	00 c0       	rjmp	.+0      	; 0x320 <LCD_Init+0x50>
 320:	00 00       	nop
 322:	83 e3       	ldi	r24, 0x33	; 51
 324:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WriteCommd>
 328:	82 e3       	ldi	r24, 0x32	; 50
 32a:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WriteCommd>
 32e:	88 e2       	ldi	r24, 0x28	; 40
 330:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WriteCommd>
 334:	8c e0       	ldi	r24, 0x0C	; 12
 336:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WriteCommd>
 33a:	81 e0       	ldi	r24, 0x01	; 1
 33c:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WriteCommd>
 340:	82 e0       	ldi	r24, 0x02	; 2
 342:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WriteCommd>
 346:	86 e0       	ldi	r24, 0x06	; 6
 348:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WriteCommd>
 34c:	8f e0       	ldi	r24, 0x0F	; 15
 34e:	97 e2       	ldi	r25, 0x27	; 39
 350:	01 97       	sbiw	r24, 0x01	; 1
 352:	f1 f7       	brne	.-4      	; 0x350 <LCD_Init+0x80>
 354:	00 c0       	rjmp	.+0      	; 0x356 <LCD_Init+0x86>
 356:	00 00       	nop
 358:	08 95       	ret

0000035a <LCD_WriteChar>:
 35a:	cf 93       	push	r28
 35c:	c8 2f       	mov	r28, r24
 35e:	40 e0       	ldi	r20, 0x00	; 0
 360:	62 e0       	ldi	r22, 0x02	; 2
 362:	81 e0       	ldi	r24, 0x01	; 1
 364:	0e 94 b2 00 	call	0x164	; 0x164 <Dio_WritePin>
 368:	41 e0       	ldi	r20, 0x01	; 1
 36a:	61 e0       	ldi	r22, 0x01	; 1
 36c:	81 e0       	ldi	r24, 0x01	; 1
 36e:	0e 94 b2 00 	call	0x164	; 0x164 <Dio_WritePin>
 372:	40 e0       	ldi	r20, 0x00	; 0
 374:	63 e0       	ldi	r22, 0x03	; 3
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	0e 94 b2 00 	call	0x164	; 0x164 <Dio_WritePin>
 37c:	8c 2f       	mov	r24, r28
 37e:	80 7f       	andi	r24, 0xF0	; 240
 380:	8b bb       	out	0x1b, r24	; 27
 382:	41 e0       	ldi	r20, 0x01	; 1
 384:	63 e0       	ldi	r22, 0x03	; 3
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	0e 94 b2 00 	call	0x164	; 0x164 <Dio_WritePin>
 38c:	87 e8       	ldi	r24, 0x87	; 135
 38e:	93 e1       	ldi	r25, 0x13	; 19
 390:	01 97       	sbiw	r24, 0x01	; 1
 392:	f1 f7       	brne	.-4      	; 0x390 <LCD_WriteChar+0x36>
 394:	00 c0       	rjmp	.+0      	; 0x396 <LCD_WriteChar+0x3c>
 396:	00 00       	nop
 398:	40 e0       	ldi	r20, 0x00	; 0
 39a:	63 e0       	ldi	r22, 0x03	; 3
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	0e 94 b2 00 	call	0x164	; 0x164 <Dio_WritePin>
 3a2:	83 ec       	ldi	r24, 0xC3	; 195
 3a4:	99 e0       	ldi	r25, 0x09	; 9
 3a6:	01 97       	sbiw	r24, 0x01	; 1
 3a8:	f1 f7       	brne	.-4      	; 0x3a6 <LCD_WriteChar+0x4c>
 3aa:	00 c0       	rjmp	.+0      	; 0x3ac <LCD_WriteChar+0x52>
 3ac:	00 00       	nop
 3ae:	c2 95       	swap	r28
 3b0:	c0 7f       	andi	r28, 0xF0	; 240
 3b2:	cb bb       	out	0x1b, r28	; 27
 3b4:	41 e0       	ldi	r20, 0x01	; 1
 3b6:	63 e0       	ldi	r22, 0x03	; 3
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	0e 94 b2 00 	call	0x164	; 0x164 <Dio_WritePin>
 3be:	87 e8       	ldi	r24, 0x87	; 135
 3c0:	93 e1       	ldi	r25, 0x13	; 19
 3c2:	01 97       	sbiw	r24, 0x01	; 1
 3c4:	f1 f7       	brne	.-4      	; 0x3c2 <LCD_WriteChar+0x68>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <LCD_WriteChar+0x6e>
 3c8:	00 00       	nop
 3ca:	40 e0       	ldi	r20, 0x00	; 0
 3cc:	63 e0       	ldi	r22, 0x03	; 3
 3ce:	81 e0       	ldi	r24, 0x01	; 1
 3d0:	0e 94 b2 00 	call	0x164	; 0x164 <Dio_WritePin>
 3d4:	83 ec       	ldi	r24, 0xC3	; 195
 3d6:	99 e0       	ldi	r25, 0x09	; 9
 3d8:	01 97       	sbiw	r24, 0x01	; 1
 3da:	f1 f7       	brne	.-4      	; 0x3d8 <LCD_WriteChar+0x7e>
 3dc:	00 c0       	rjmp	.+0      	; 0x3de <LCD_WriteChar+0x84>
 3de:	00 00       	nop
 3e0:	cf 91       	pop	r28
 3e2:	08 95       	ret

000003e4 <LCD_WriteString>:
 3e4:	0f 93       	push	r16
 3e6:	1f 93       	push	r17
 3e8:	cf 93       	push	r28
 3ea:	fc 01       	movw	r30, r24
 3ec:	80 81       	ld	r24, Z
 3ee:	88 23       	and	r24, r24
 3f0:	59 f0       	breq	.+22     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3f2:	8f 01       	movw	r16, r30
 3f4:	c0 e0       	ldi	r28, 0x00	; 0
 3f6:	0e 94 ad 01 	call	0x35a	; 0x35a <LCD_WriteChar>
 3fa:	cf 5f       	subi	r28, 0xFF	; 255
 3fc:	f8 01       	movw	r30, r16
 3fe:	ec 0f       	add	r30, r28
 400:	f1 1d       	adc	r31, r1
 402:	80 81       	ld	r24, Z
 404:	81 11       	cpse	r24, r1
 406:	f7 cf       	rjmp	.-18     	; 0x3f6 <LCD_WriteString+0x12>
 408:	cf 91       	pop	r28
 40a:	1f 91       	pop	r17
 40c:	0f 91       	pop	r16
 40e:	08 95       	ret

00000410 <LCD_GoTo>:
 410:	cf 93       	push	r28
 412:	df 93       	push	r29
 414:	00 d0       	rcall	.+0      	; 0x416 <LCD_GoTo+0x6>
 416:	cd b7       	in	r28, 0x3d	; 61
 418:	de b7       	in	r29, 0x3e	; 62
 41a:	90 e8       	ldi	r25, 0x80	; 128
 41c:	99 83       	std	Y+1, r25	; 0x01
 41e:	90 ec       	ldi	r25, 0xC0	; 192
 420:	9a 83       	std	Y+2, r25	; 0x02
 422:	fe 01       	movw	r30, r28
 424:	e8 0f       	add	r30, r24
 426:	f1 1d       	adc	r31, r1
 428:	81 81       	ldd	r24, Z+1	; 0x01
 42a:	86 0f       	add	r24, r22
 42c:	0e 94 23 01 	call	0x246	; 0x246 <LCD_WriteCommd>
 430:	0f 90       	pop	r0
 432:	0f 90       	pop	r0
 434:	df 91       	pop	r29
 436:	cf 91       	pop	r28
 438:	08 95       	ret

0000043a <LCD_WriteIntger>:

}
void LCD_WriteIntger  (sint32 num)
{
 43a:	0f 93       	push	r16
 43c:	1f 93       	push	r17
 43e:	cf 93       	push	r28
 440:	df 93       	push	r29
 442:	ec 01       	movw	r28, r24
    
	uint16 l=4, i=l;
	uint8 str[l+1], x=l+1;
	
	while(num)
 444:	89 2b       	or	r24, r25
 446:	61 f0       	breq	.+24     	; 0x460 <LCD_WriteIntger+0x26>
	{
		str[i] = num % 10;//sign 12.3 
 448:	0a e0       	ldi	r16, 0x0A	; 10
 44a:	10 e0       	ldi	r17, 0x00	; 0
		num= num / 10;// sign 12 and clear 3 
 44c:	ce 01       	movw	r24, r28
 44e:	b8 01       	movw	r22, r16
 450:	0e 94 4e 02 	call	0x49c	; 0x49c <__divmodhi4>
 454:	eb 01       	movw	r28, r22
		LCD_WriteChar(48+str[i]);
 456:	80 5d       	subi	r24, 0xD0	; 208
 458:	0e 94 ad 01 	call	0x35a	; 0x35a <LCD_WriteChar>
{
    
	uint16 l=4, i=l;
	uint8 str[l+1], x=l+1;
	
	while(num)
 45c:	20 97       	sbiw	r28, 0x00	; 0
 45e:	b1 f7       	brne	.-20     	; 0x44c <LCD_WriteIntger+0x12>
		{
		LCD_WriteChar('-');	
		}
	}
			
}
 460:	df 91       	pop	r29
 462:	cf 91       	pop	r28
 464:	1f 91       	pop	r17
 466:	0f 91       	pop	r16
 468:	08 95       	ret

0000046a <main>:



int main(void)
{
	LCD_Init();
 46a:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LCD_Init>
	
	
	
		
	    LCD_GoTo(0,0);
 46e:	60 e0       	ldi	r22, 0x00	; 0
 470:	80 e0       	ldi	r24, 0x00	; 0
 472:	0e 94 08 02 	call	0x410	; 0x410 <LCD_GoTo>
		LCD_WriteString("num of salary = ");
 476:	80 e6       	ldi	r24, 0x60	; 96
 478:	90 e0       	ldi	r25, 0x00	; 0
 47a:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <LCD_WriteString>
		LCD_GoTo(1,0);
 47e:	60 e0       	ldi	r22, 0x00	; 0
 480:	81 e0       	ldi	r24, 0x01	; 1
 482:	0e 94 08 02 	call	0x410	; 0x410 <LCD_GoTo>
		sint32 num=-1234;
		LCD_WriteIntger  (num);
 486:	8e e2       	ldi	r24, 0x2E	; 46
 488:	9b ef       	ldi	r25, 0xFB	; 251
 48a:	0e 94 1d 02 	call	0x43a	; 0x43a <LCD_WriteIntger>
		LCD_WriteString("$");
 48e:	81 e7       	ldi	r24, 0x71	; 113
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <LCD_WriteString>
	
	
	
	
return 0;
}
 496:	80 e0       	ldi	r24, 0x00	; 0
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	08 95       	ret

0000049c <__divmodhi4>:
 49c:	97 fb       	bst	r25, 7
 49e:	07 2e       	mov	r0, r23
 4a0:	16 f4       	brtc	.+4      	; 0x4a6 <__divmodhi4+0xa>
 4a2:	00 94       	com	r0
 4a4:	07 d0       	rcall	.+14     	; 0x4b4 <__divmodhi4_neg1>
 4a6:	77 fd       	sbrc	r23, 7
 4a8:	09 d0       	rcall	.+18     	; 0x4bc <__divmodhi4_neg2>
 4aa:	0e 94 62 02 	call	0x4c4	; 0x4c4 <__udivmodhi4>
 4ae:	07 fc       	sbrc	r0, 7
 4b0:	05 d0       	rcall	.+10     	; 0x4bc <__divmodhi4_neg2>
 4b2:	3e f4       	brtc	.+14     	; 0x4c2 <__divmodhi4_exit>

000004b4 <__divmodhi4_neg1>:
 4b4:	90 95       	com	r25
 4b6:	81 95       	neg	r24
 4b8:	9f 4f       	sbci	r25, 0xFF	; 255
 4ba:	08 95       	ret

000004bc <__divmodhi4_neg2>:
 4bc:	70 95       	com	r23
 4be:	61 95       	neg	r22
 4c0:	7f 4f       	sbci	r23, 0xFF	; 255

000004c2 <__divmodhi4_exit>:
 4c2:	08 95       	ret

000004c4 <__udivmodhi4>:
 4c4:	aa 1b       	sub	r26, r26
 4c6:	bb 1b       	sub	r27, r27
 4c8:	51 e1       	ldi	r21, 0x11	; 17
 4ca:	07 c0       	rjmp	.+14     	; 0x4da <__udivmodhi4_ep>

000004cc <__udivmodhi4_loop>:
 4cc:	aa 1f       	adc	r26, r26
 4ce:	bb 1f       	adc	r27, r27
 4d0:	a6 17       	cp	r26, r22
 4d2:	b7 07       	cpc	r27, r23
 4d4:	10 f0       	brcs	.+4      	; 0x4da <__udivmodhi4_ep>
 4d6:	a6 1b       	sub	r26, r22
 4d8:	b7 0b       	sbc	r27, r23

000004da <__udivmodhi4_ep>:
 4da:	88 1f       	adc	r24, r24
 4dc:	99 1f       	adc	r25, r25
 4de:	5a 95       	dec	r21
 4e0:	a9 f7       	brne	.-22     	; 0x4cc <__udivmodhi4_loop>
 4e2:	80 95       	com	r24
 4e4:	90 95       	com	r25
 4e6:	bc 01       	movw	r22, r24
 4e8:	cd 01       	movw	r24, r26
 4ea:	08 95       	ret

000004ec <_exit>:
 4ec:	f8 94       	cli

000004ee <__stop_program>:
 4ee:	ff cf       	rjmp	.-2      	; 0x4ee <__stop_program>
